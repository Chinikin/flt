package com.depression.dao;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.depression.model.Page;
import com.depression.model.TestingOld;
import com.depression.model.TestingCustom;
import com.depression.model.Testing;

public interface TestingMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	int insert(Testing record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	int insertSelective(Testing record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	Testing selectByPrimaryKey(Long testingId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	Testing selectByPrimaryKeyLock(Long testingId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	List<Testing> selectByPrimaryKeyBulk(@Param("ids") List<Long> ids);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	int deleteByPrimaryKey(Long testingId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	int deleteByPrimaryKeyBulk(@Param("ids") List<Long> ids);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	int enableByPrimaryKeyBulk(@Param("ids") List<Long> ids,
			@Param("enable") Byte enable);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	int updateByPrimaryKey(Testing record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	int updateByPrimaryKeyWithBLOBs(Testing record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	int updateByPrimaryKeySelective(Testing record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	List<Testing> selectSelective(Testing record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	List<Testing> selectSelectiveWithPage(Testing record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testing
	 * @mbggenerated  Tue Mar 21 10:35:12 CST 2017
	 */
	int countSelective(Testing record);

	int checkTestingExits(Testing testing);
	
	/*public void updateTestingEnableByTestingIds(List<String> testingIds);

	public void updateTestingDisableByTestingIds(List<String> testingIds);
*/
	void updateTestingStatusTestingIds(@Param("testingIds")List<Long> testingIds,@Param("isDel")byte isDel);

	Long getPageCounts(Testing testing);

	List<Testing> getPageList(Testing testing);
	
	List<Testing> getPageListOrderBy(Testing testing);
	
	// 获取最热门的测试问卷列表(学生测试)
	public List<Testing> getHotTestingForStuTest(@Param("size") Integer size);
	
	public List<Testing> selectByPrimaryKeysWithPageEnabled(
			@Param("ids")List<Long> ids, @Param("pageStartNum")Integer pageStartNum,
			@Param("pageSize")Integer pageSize);
	
	// 获取最热门的测试问卷列表(专业测试，目前官网和手机app不支持趣味测试类型)
	public List<Testing> getTopTesting(@Param("size") Integer size);

	List<Testing> getPageListByTypeIds(@Param("typeIds")List<Long> typeIds, @Param("pageStartNum")Integer pageStartNum,
			@Param("pageSize")Integer pageSize);
	
	
	Integer countByTypeIds(@Param("typeIds")List<Long> typeIds);
	
	public int countByPrimaryKeysEnabled(@Param("ids")List<Long> ids);
	
	 /**
	 * 根据标题精确查找问卷
	 * 
	 * @param title
	 * @return
	 */
	public List<Testing> getTestingByTitle(String title);
	
	public List<Testing> selectForLucene();
}