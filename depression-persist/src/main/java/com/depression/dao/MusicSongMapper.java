package com.depression.dao;

import com.depression.model.MusicSong;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface MusicSongMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	int insert(MusicSong record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	int insertSelective(MusicSong record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	MusicSong selectByPrimaryKey(Long msId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	MusicSong selectByPrimaryKeyLock(Long msId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	List<MusicSong> selectByPrimaryKeyBulk(@Param("ids") List<Long> ids);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	int deleteByPrimaryKey(Long msId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	int deleteByPrimaryKeyBulk(@Param("ids") List<Long> ids);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	int enableByPrimaryKeyBulk(@Param("ids") List<Long> ids, @Param("enable") Byte enable);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	int updateByPrimaryKey(MusicSong record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	int updateByPrimaryKeyWithBLOBs(MusicSong record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	int updateByPrimaryKeySelective(MusicSong record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	List<MusicSong> selectSelective(MusicSong record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	List<MusicSong> selectSelectiveWithPage(MusicSong record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table music_song
	 * @mbggenerated  Fri Mar 03 09:13:07 CST 2017
	 */
	int countSelective(MusicSong record);
	
	/**
	 * 搜索音乐歌曲，按历史播放数倒序
	 * @param words 关键词
	 * @param mcId 音乐分类id
	 * @param pageStartNum 
	 * @param pageSize
	 * @return
	 */
	List<MusicSong> searchWithPage(@Param("words")String words, @Param("mcId")Long mcId,
			@Param("pageStartNum")Integer pageStartNum, @Param("pageSize")Integer pageSize);
	
	List<MusicSong> searchWithPageOrderBy(@Param("words")String words, @Param("mcId")Long mcId,
			@Param("pageStartNum")Integer pageStartNum, @Param("pageSize")Integer pageSize);
	
	int countSearch(@Param("words")String words, @Param("mcId")Long mcId);
	
	/**
	 * 根据条件获取排名
	 * @param words 关键词
	 * @param mcId 音乐分类id
	 * @param historyPlayCount 排名条件：历史播放数
	 * @param todayPlayCount 排名条件：今日播放数
	 * @param historyShareCount 排名条件：历史分享数
	 * @return
	 */
	int ranking(@Param("words")String words, @Param("mcId")Long mcId, 
			@Param("historyPlayCount")Integer historyPlayCount,
			@Param("todayPlayCount")Integer todayPlayCount,
			@Param("weekPlayCount")Integer weekPlayCount,
			@Param("historyShareCount")Integer historyShareCount);
	
	/**
	 * 获取
	 * @param msId
	 * @return
	 */
	int obtainWeekPlayCount(Long msId);
}